import asyncio
import os
from aiogram import Bot, Dispatcher, types
from aiogram.filters import CommandStart
from aiohttp import web

# –¢–æ–∫–µ–Ω –∏–∑ Render Environment Variables
BOT_TOKEN = os.environ.get("BOT_TOKEN")
if not BOT_TOKEN:
    raise RuntimeError("BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω! –î–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –≤ Environment Variables Render.")

# –ü–æ–ª—É—á–∞–µ–º URL Render (–æ–Ω –ø–æ—è–≤–∏—Ç—Å—è –ø–æ—Å–ª–µ –¥–µ–ø–ª–æ—è)
RENDER_EXTERNAL_URL = os.environ.get("RENDER_EXTERNAL_URL")
if not RENDER_EXTERNAL_URL:
    raise RuntimeError("RENDER_EXTERNAL_URL –Ω–µ –∑–∞–¥–∞–Ω! –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è.")

WEBHOOK_PATH = f"/webhook/{BOT_TOKEN}"
WEBHOOK_URL = f"{RENDER_EXTERNAL_URL}{WEBHOOK_PATH}"

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(CommandStart())
async def start_handler(message: types.Message):
    text = "üéÅ –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ Virus Gift Bot ‚Äî –≤—ã–±–∏—Ä–∞–π, —á—Ç–æ —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ üëá"
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=[
        [types.InlineKeyboardButton(text="üéÅ –ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫", url="https://t.me/virus_play_bot/app?startapp=roulette_inviteCodesmKkOJLS3JDvHhYM")],
        [types.InlineKeyboardButton(text="üí´ –ö—É–ø–∏—Ç—å –∑–≤—ë–∑–¥—ã", url="https://split.tg/?ref=UQAENEC9lNreXR8K35LgVzEKK3zAL4-8Dq5d-0rqFMZuDmFC")],
        [types.InlineKeyboardButton(text="üíµ –ü–æ–ª—É—á–∏—Ç—å —Å–∫–∏–Ω –∑–∞ $5 (–ø—Ä–æ–º–æ BETME)", url="https://plg.bet/ru/affiliates")],
        [types.InlineKeyboardButton(text="üß† –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª", url="https://t.me/virusmetg")],
        [types.InlineKeyboardButton(text="üéÆ –ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å tg –ø–æ–¥–∞—Ä–∫–æ–≤", url="https://t.me/portals/market?startapp=4vp0jk")],
        [types.InlineKeyboardButton(text="üé∞ –†—É–ª–µ—Ç–∫–∞ tg –ø–æ–¥–∞—Ä–∫–æ–≤", url="https://t.me/rollsgame_bot/app?startapp=ref_jeBivgoYMO")],
    ])
    await message.answer(text, reply_markup=keyboard)

# ---------- AIOHTTP SERVER ----------
async def handle(request):
    update = await request.json()
    await dp.feed_update(bot, update)
    return web.Response()

async def on_startup(app):
    await bot.set_webhook(WEBHOOK_URL)
    print(f"‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {WEBHOOK_URL}")

async def on_shutdown(app):
    await bot.delete_webhook()
    await bot.session.close()
    print("üõë Webhook —É–¥–∞–ª—ë–Ω")

def main():
    app = web.Application()
    app.router.add_post(WEBHOOK_PATH, handle)
    app.on_startup.append(on_startup)
    app.on_shutdown.append(on_shutdown)
    web.run_app(app, host="0.0.0.0", port=int(os.environ.get("PORT", 10000)))

if __name__ == "__main__":
    main()
